version:#version 330
vertex [
	$version
	layout (location = 0) in vec4 position;
	layout (location = 1) in vec2 aTexCoord;
	layout (location = 2) in vec3 Normals;

	out vec3 vertexPosition;

	uniform mat4 world;
	uniform mat4 view;
	uniform mat4 projection;

	void main()
	{
		vec4 worldPosition = position * world;
		vec4 posRelativeCamera = worldPosition * view;

		vec4 finalposition = posRelativeCamera;
		float radius = 400;
		
		float dis = length(worldPosition.xz);
		float curvature = 1-cos(dis/radius);
		
		if (curvature > 0){
			finalposition.y -= radius*curvature;
		}
		
		vertexPosition = position.xyz;

		gl_Position = finalposition * projection;
	}
];

fragment [
	$version

	layout(location = 0) out vec4 color;

	in vec3 vertexPosition;

	uniform samplerCube texture0;

	uniform vec4 SKY_Color;
	uniform vec4 SKY_HoriColor;

	void main()
	{
		//color = texture(texture0, texCoord);
		float dis = length(vertexPosition.y / 2.2);
		
		if (vertexPosition.y < 0){
			dis = 0;
		}
		
		color += mix(SKY_HoriColor, SKY_Color, abs(dis));
	}

];